# ====================================================================================
# Purpose:
# This query checks if each observation has complete coordinate information.
# It returns:
#   - "non_empty" → if coordinates (WKT) are present
#   - "empty"     → if geometry or WKT is missing
# ====================================================================================

# =============================
# Step 1: Define common prefixes
# =============================
PREFIX sosa: <http://www.w3.org/ns/sosa/>
PREFIX tern: <https://w3id.org/tern/ontologies/tern/>
PREFIX geo:  <http://www.opengis.net/ont/geosparql#>
PREFIX dqaf: <http://example.com/def/dqaf/>
PREFIX schema: <http://schema.org/>

# ========================================
# Step 2: Insert the completeness result
# ========================================
INSERT {
  GRAPH dqaf:fullResults {
    ?observation dqaf:hasResult [
      sosa:observedProperty <http://example.com/assess/coordinate_completeness/> ;
      schema:value ?completeness
    ]
  }
}

# ========================================
# Step 3: Match and classify observations
# ========================================
WHERE {
  # Observation must exist
  ?observation a tern:Observation .

  # Observation must refer to a sample
  ?observation sosa:hasFeatureOfInterest ?sample .
  ?sample a tern:Sample .

  # Sample must be result of a procedure
  ?sample sosa:isResultOf ?procedure .

  # Try to find geometry
  OPTIONAL {
    ?procedure geo:hasGeometry ?geometry .
    OPTIONAL { ?geometry geo:asWKT ?wkt . }
  }

  # If WKT is found → "non_empty", else → "empty"
  BIND(
    IF(BOUND(?wkt), "non_empty", "empty")
    AS ?completeness
  )
}
